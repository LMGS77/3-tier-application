name: build and go

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET 6.0.x
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      - name: Install SonarScanner for .NET
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Set up environment
        run: echo "##[set-env name=PATH]$PATH:$HOME/.dotnet/tools"
    
      - name: SonarQube - Begin analysis
        run: dotnet sonarscanner begin /k:"3-tier-app" /d:sonar.host.url="${{ vars.SONAR_HOST_URL }}" /d:sonar.login="${{ secrets.SONARQUBE_TOKEN }}"

      - name: Install dependencies Basic3tier.Core
        run: dotnet restore ./api/Basic3Tier.Core/Basic3Tier.Core.csproj

      - name: Install dependencies Basic3tier.Infrastructure
        run: dotnet restore ./api/Basic3Tier.Infrastructure/Basic3Tier.Infrastructure.csproj

      - name: Install dependencies Basic3tierAPI
        run: dotnet restore ./api/Basic3TierAPI/Basic3TierAPI.csproj

      - name: Build Basic3tier.Core
        run: dotnet build ./api/Basic3Tier.Core/Basic3Tier.Core.csproj

      - name: Build Basic3tier.Infrastructure
        run: dotnet build ./api/Basic3Tier.Infrastructure/Basic3Tier.Infrastructure.csproj

      - name: Build Basic3tierAPI
        run: dotnet build ./api/Basic3TierAPI/Basic3TierAPI.csproj

      - name: Test Basic3tier.Core
        run: dotnet test ./api/Basic3Tier.Core/Basic3Tier.Core.csproj

      - name: Test Basic3tier.Infrastructure
        run: dotnet test ./api/Basic3Tier.Infrastructure/Basic3Tier.Infrastructure.csproj

      - name: Test Basic3tierAPI
        run: dotnet test ./api/Basic3TierAPI/Basic3TierAPI.csproj

      - name: SonarQube - End analysis
        run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONARQUBE_TOKEN }}"

#      - name: Cache SonarQube packages
#        uses: actions/cache@v1
#        with:
#          path: ~/.sonar/cache
#          key: ${{ runner.os }}-sonar
#          restore-keys: ${{ runner.os }}-sonar

#     - name: Run analysis
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
#        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=ci-java -Dsonar.projectName='ci-java'


