name: build and go

on: [push]

env:
  PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  HOSTNAME: ${{ secrets.SSH_HOST }}
  USER_NAME: ${{ secrets.USER_NAME }}

jobs:
  build:

    runs-on: ubuntu-latest

    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET 6.0.x
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      - name: Install Java JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install SonarScanner for .NET
        run: |
          dotnet tool install --global dotnet-sonarscanner
          echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Run analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}    
        run: dotnet sonarscanner begin /k:"3-tier-app" /d:sonar.host.url="${{ env.SONAR_HOST_URL }}" /d:sonar.login="${{ env.SONAR_TOKEN }}"

      - name: Install dependencies Basic3tier
        run: |
          dotnet restore ./api/Basic3Tier.Core/Basic3Tier.Core.csproj
          dotnet restore ./api/Basic3Tier.Infrastructure/Basic3Tier.Infrastructure.csproj
          dotnet restore ./api/Basic3TierAPI/Basic3TierAPI.csproj

      - name: Build Basic3tier
        run: |
          dotnet build ./api/Basic3Tier.Core/Basic3Tier.Core.csproj
          dotnet build ./api/Basic3Tier.Infrastructure/Basic3Tier.Infrastructure.csproj
          dotnet build ./api/Basic3TierAPI/Basic3TierAPI.csproj

      - name: Test Basic3tier.Core
        run: |
          dotnet test ./api/Basic3Tier.Core/Basic3Tier.Core.csproj
          dotnet test ./api/Basic3Tier.Infrastructure/Basic3Tier.Infrastructure.csproj
          dotnet test ./api/Basic3TierAPI/Basic3TierAPI.csproj

      - name: SonarQube - End analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images with Docker Compose
        run: |
          docker-compose -f docker-compose.yml build
          docker-compose -f docker-compose.yml push

      - name: Deploy application via SSH
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
            rm -rf 3_tier_app_solution_k8s &&
            git clone https://github.com/LMGS77/3-tier-application.git &&
            cd 3-tier-application &&
            sudo docker-compose up -d'